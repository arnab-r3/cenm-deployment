
#############################################
# All individual keys used in signing tasks #
#############################################
signingKeys = {
    "cordaidentitymanagerca" = {
        alias = "identitymanagerca"
        type = LOCAL
        password = "key-password"
        keyStore {
            file = "./DATA/key-stores/identity-manager-key-store.jks"
            password = "key-password"
        }
    },
    "cordanetworkmap" = {
        alias = "networkmap"
        type = LOCAL
        password = "key-password"
        keyStore {
            file = "./DATA/key-stores/network-map-key-store.jks"
            password = "key-password"
        }
    }
}

###################################################
# Signing tasks to be run (manually or scheduled) #
###################################################
signers = {
    "CSR" = {
        type = CSR
        signingKeyAlias = "cordaidentitymanagerca"
        crlDistributionPoint = "http://{{ required "Public IP address required (add --set idmanPublicIP=x.x.x.x to your helm command)" .Values.idmanPublicIP }}:{{ .Values.idmanPort }}/certificate-revocation-list/doorman"
        validDays = 7300 # 20 year certificate expiry
        schedule {
            interval = {{ .Values.signers.CSR.schedule.interval }}
        }
        serviceLocation = [
            {
                host = {{ .Values.prefix }}-{{ .Values.serviceLocations.identityManager.host }}
                port = {{ .Values.serviceLocations.identityManager.port }}
                ssl = {
                    keyStore = {
                        location = "./DATA/key-stores/corda-ssl-signer-keys.jks"
                        password = password
                    }
                    trustStore = {
                        location = "./DATA/trust-stores/corda-ssl-trust-store.jks"
                        password = trust-store-password
                    }
                    validate = true
                }
            }
        ]
    },
    "CRL" = {
        type = CRL
        signingKeyAlias = "cordaidentitymanagerca"
        crlDistributionPoint = "http://{{ required "Public IP address required (add --set idmanPublicIP=x.x.x.x to your helm command)" .Values.idmanPublicIP }}:{{ .Values.idmanPort }}/certificate-revocation-list/doorman"
        # updatePeriod = 86400000 # 1 day CRL expiry
        updatePeriod = 604800000 # 1 week CRL expiry
        schedule {
            interval = {{ .Values.signers.CRL.schedule.interval }}
        }
        serviceLocation = [
            {
                host = {{ .Values.prefix }}-{{ .Values.serviceLocations.identityManager.host }}
                port = {{ .Values.serviceLocations.revocation.port }}
                ssl = {
                    keyStore = {
                        location = "./DATA/key-stores/corda-ssl-signer-keys.jks"
                        password = password
                    }
                    trustStore = {
                        location = "./DATA/trust-stores/corda-ssl-trust-store.jks"
                        password = trust-store-password
                    }
                    validate = true
                }
            }
        ]
    },
    "NetworkMap" = {
        type = NETWORK_MAP
        signingKeyAlias = "cordanetworkmap"
        schedule {
            interval = {{ .Values.signers.NetworkMap.schedule.interval }}
        }
        serviceLocation = [
            {
                host = {{ .Values.prefix }}-{{ .Values.serviceLocations.networkMap.host }}
                port = {{ .Values.serviceLocations.networkMap.port }}
                ssl = {
                    keyStore = {
                        location = "./DATA/key-stores/corda-ssl-signer-keys.jks"
                        password = password
                    }
                    trustStore = {
                        location = "./DATA/trust-stores/corda-ssl-trust-store.jks"
                        password = trust-store-password
                    }
                    validate = true
                }
            },
            {
                host = {{ .Values.prefix }}-{{ .Values.serviceLocations.networkMapB.host }}
                port = {{ .Values.serviceLocations.networkMapB.port }}
                ssl = {
                    keyStore = {
                        location = "./DATA/key-stores/corda-ssl-signer-keys.jks"
                        password = password
                    }
                    trustStore = {
                        location = "./DATA/trust-stores/corda-ssl-trust-store.jks"
                        password = trust-store-password
                    }
                    validate = true
                }
            }
        ]
    },
    "NetworkParameters" = {
        type = NETWORK_PARAMETERS
        signingKeyAlias = "cordanetworkmap"
        schedule {
            interval = {{ .Values.signers.NetworkParameters.schedule.interval }}
        }
        serviceLocation = [
            {
                host = {{ .Values.prefix }}-{{ .Values.serviceLocations.networkMap.host }}
                port = {{ .Values.serviceLocations.networkMap.port }}
                ssl = {
                    keyStore = {
                        location = "./DATA/key-stores/corda-ssl-signer-keys.jks"
                        password = password
                    }
                    trustStore = {
                        location = "./DATA/trust-stores/corda-ssl-trust-store.jks"
                        password = trust-store-password
                    }
                    validate = true
                }
            },
            {
                host = {{ .Values.prefix }}-{{ .Values.serviceLocations.networkMapB.host }}
                port = {{ .Values.serviceLocations.networkMapB.port }}
                ssl = {
                    keyStore = {
                        location = "./DATA/key-stores/corda-ssl-signer-keys.jks"
                        password = password
                    }
                    trustStore = {
                        location = "./DATA/trust-stores/corda-ssl-trust-store.jks"
                        password = trust-store-password
                    }
                    validate = true
                }
            }
        ]
    }
}

authServiceConfig = {
    disableAuthentication = false
    host="{{ .Values.prefix }}-auth"
    port={{ .Values.authService.port }}
    trustStore = {
        location = "./DATA/trust-stores/corda-ssl-trust-store.jks"
        password = trust-store-password
    }
    issuer="http://test"
    leeway=5s
}

adminListener = {
    port = {{ .Values.adminListener.port }}
    ssl = {
        keyStore = {
            location = ./DATA/key-stores/corda-ssl-identity-manager-keys.jks
            password = password
        }
        trustStore = {
            location = ./DATA/trust-stores/corda-ssl-trust-store.jks
            password = trust-store-password
        }
    }
}